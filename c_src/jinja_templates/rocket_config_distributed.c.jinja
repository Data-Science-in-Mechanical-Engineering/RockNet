#include "rocket_config.h"
#include "conv.h"
#include <stdint.h>

static time_series_type_t const *timeseries[NUM_TIMESERIES];

{% for tsdata in timeseries_data %}
static const time_series_type_t timeseries_data{{loop.index}}[] = {{ tsdata }};
{% endfor %}

static const float labels[] = {{labels}};

static const uint16_t kernels[] = {{kernels}};
static const uint32_t dilations[] = {{dilations}};
static const float quantiles[] = {{quantiles}};

static float biases[MAX_FEATURES_PER_DEVICE];

extern uint16_t __attribute__((section(".data"))) TOS_NODE_ID;

void init_rocket()
{
    {% for tsdata in timeseries_data %}
    timeseries[{{loop.index-1}}] = timeseries_data{{loop.index}};
    {% endfor %}


    calc_bias(timeseries[0], biases, kernels, NUM_KERNELS, dilations, NUM_DILATIONS, quantiles, NUM_BIASES_PER_KERNEL);

}

const time_series_type_t const **get_timeseries()
{
    return timeseries;
}

const float *get_labels()
{
    return labels;
}

const uint16_t *get_kernels()
{
    return kernels;
}

const uint32_t *get_dilations()
{
    return dilations;
}

const float *get_quantiles()
{
    return quantiles;
}

float *get_biases()
{
    return biases;
}
